:: EventSetup_brothel_high_season [nobr event]

<<run new setup.Event(
'brothel_high_season', /* key */
"Brothel High Season", /* Title */
{ /* Author */
  name: "FCdev and darko",
  url: "",
},
[ /* tags */
  'forest',
],
'Event_brothel_high_season',
{ /* roles (LEGACY) */
},
{ /* actors */
  'head': 'brothel_cleanup0',
  'owner': [
    setup.qres.Job(setup.job.slaver),
    setup.qres.Available(),
    setup.qres.HasTitle('quest_brothel_owner_0'),
    setup.qres.Home(),
  ],
  'slave': 'brothel_head_courtesan',
},
[ /* outcomes */
  setup.qc.SetCooldownEvent(null, 300),
  setup.qc.VarSet('quest_brothel_wait', '50', -1),
  setup.qc.IfThenElse(
setup.qres.VarEqual('quest_brothel_sub', 'sub'),
setup.qc.DoAll([
setup.qc.QuestDirect('high_brothel_season_sub_', {
owner: "owner",
head: "head",
slave: "slave",
})
], undefined),
setup.qc.DoAll([
setup.qc.IfThenElse(
setup.qres.VarEqual('quest_brothel_sub', 'dom'),
setup.qc.DoAll([
setup.qc.QuestDirect('high_brothel_season_dom_', {
owner: "owner",
head: "head",
slave: "slave",
})
], undefined),
setup.qc.DoAll([
setup.qc.QuestDirect('high_brothel_season', {
owner: "owner",
head: "head",
slave: "slave",
})
], undefined))
], undefined)),
],
[ /* restrictions */
  setup.qres.VarNull('quest_brothel_wait'),
  setup.qres.VarEqual('quest_brothel_progress', '500'),
],
53, /* Cooldown */
setup.rarity.rare, /* Rarity */
)>>

:: Event_brothel_high_season [nobr]
<<include "Quest_high_brothel_season_dom_">>

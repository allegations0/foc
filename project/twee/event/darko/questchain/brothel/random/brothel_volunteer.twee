:: EventSetup_brothel_volunteer [nobr event]

<<run new setup.UnitGroup(
"brothel_volunteer0",
"Brothel Volunteer (Male)",
'forest_allmale', /* pools */
0, /* reuse chance */
[ /* unit post process */
  setup.qc.BgTraitReset('unit', setup.trait.bg_unemployed),
  setup.qc.AddTraitsRandom('unit', [setup.trait.per_lustful, setup.trait.per_playful, setup.trait.per_dreamy, setup.trait.per_lavish], 2, true, false),
],
)>>

<<run new setup.UnitGroup(
"brothel_volunteer1",
"Brothel Volunteer (Female)",
'forest_allfemale', /* pools */
0, /* reuse chance */
[ /* unit post process */
  setup.qc.BgTraitReset('unit', setup.trait.bg_unemployed),
  setup.qc.AddTraitsRandom('unit', [setup.trait.per_lustful, setup.trait.per_playful, setup.trait.per_dreamy, setup.trait.per_lavish], 2, true, false),
],
)>>

<<run new setup.Event(
'brothel_volunteer', /* key */
"Brothel Volunteer", /* Title */
{ /* Author */
  name: "darko",
  url: "",
},
[ /* tags */
  'forest',
],
'Event_brothel_volunteer',
{ /* roles (LEGACY) */
},
{ /* actors */
  'head': 'brothel_cleanup0',
  'owner': [
    setup.qres.Job(setup.job.slaver),
    setup.qres.Available(),
    setup.qres.HasTitle('quest_brothel_owner_0'),
    setup.qres.Home(),
  ],
  'slave': 'brothel_head_courtesan',
  'volunteer_male': 'brothel_volunteer0',
  'volunteer_female': 'brothel_volunteer1',
},
[ /* outcomes */
  setup.qc.VarSet('quest_brothel_wait', '50', -1),
  setup.qc.SetCooldownEvent(null, 300),
  setup.qc.IfThenElse(
    setup.qres.VarEqual('quest_brothel_gender', 'male'),
    setup.qc.Opportunity('brothel_volunteer', {
      owner: "owner",
      head: "head",
      slave: "slave",
      volunteer: "volunteer_male",
    }),
    setup.qc.Opportunity('brothel_volunteer', {
      owner: "owner",
      head: "head",
      slave: "slave",
      volunteer: "volunteer_female",
    }),
  ),
],
[ /* restrictions */
  setup.qres.VarNull('quest_brothel_wait'),
  setup.qres.VarEqual('quest_brothel_progress', '500'),
],
53, /* Cooldown */
setup.rarity.rare, /* Rarity */
)>>

:: Event_brothel_volunteer [nobr]

<<if $g.head.isFemale()>>
  <<set $g.volunteer = $g.volunteer_female>>
<<else>>
  <<set $g.volunteer = $g.volunteer_male>>
<</if>>

<<include "Opportunity_brothel_volunteer">>

:: UGGenInit [nobr]

<<if _baseunitgroup>>
  <<set $ugname = _baseunitgroup.getName()>>
  <<set $ugpools = _baseunitgroup.getUnitPools()>>
  <<set $ugpostprocess = _baseunitgroup.unit_post_process>>
  <<set $ugisreuse = !(!(_baseunitgroup.reuse_chance))>>
<<else>>
  <<set $ugname = "">>
  <<set $ugpools = []>>
  <<set $ugpostprocess = []>>
  <<set $ugisreuse = false>>
<</if>>

<<dtsavepassage 'UnitGroupGen'>>

:: UnitGroupGen [nobr]

<<run setup.DevToolHelper.restoreScrollPos()>>

<<dtloadpassagelink>>

<p>
Unit group name:
<<message '(?)'>>
  <div class='helpcard'>
    Enter the unit group's name.
    <br/>
    <br/>
    For example: "Desert Warriors"
  </div>
<</message>>
<<textbox "$ugname" $ugname>>
</p>

<div class='card itemcard'>
  Pools:
  [[(Add new unitpool)|UGAddUnitPool]]
  <<for _iccunitpool, _ccunitpool range $ugpools>>
    <br/>
    <<= _ccunitpool[1]>>: <<= _ccunitpool[0].rep()>>
    <<capture _iccunitpool>>
      <<link '(delete)' 'UnitGroupGen'>>
        <<run $ugpools.splice(_iccunitpool, 1)>>
      <</link>>
    <</capture>>
  <</for>>
</div>

<div class='equipmentsetcard card'>
  Unit effect:
  <<message '(?)'>>
    <div class='helpcard'>
      Use this if you want units generated from this pool to have certain characteristics.
      <br/>
      <br/>
      For example, you can use this to ensure that the unit always have a certain trait or title.
    </div>
  <</message>>
  <<devlist '$ugpostprocess' '(Add new cost)' 'QGAddCostUnit' 'UnitGroupGen'>>
</div>

<div>
<<checkbox '$ugisreuse' false true autocheck>> Is unit persistent?
<<message '(?)'>>
  <div class='helpcard'>
    If checked, then the unit generated by this unitgroup will remain <<successtext 'persistent'>>.
    <br/>
    <br/>
    A persistent unit will persist when the quest ended.
    When another quest tries to pull a unit from this unit group, the same unit will
    be selected.
    For example, you can use this to generate a villain character that spans
    multiple quests, or making a quest that details the adventure of a certain
    unit spanning multiple quests.
    A new unit will only be generated when the existing one is removed, either
    by using the (Remove actor from unit group) outcome, or by the 
    (Clear all units from a unit group) outcome.
  </div>
<</message>>
</div>

<<link '(CREATE UNIT GROUP)' >>
  <<if !$ugname>>
    <<warning 'Name cannot be empty'>>
  <<else>>
    <<if !$ugpools.length>>
      <<warning 'Unit pools cannot be empty'>>
    <<else>>
      <<if $ugisreuse>>
        <<set _reuse = 1>>
      <<else>>
        <<set _reuse = 0>>
      <</if>>
      /* generate title */
      <<set _basekey = setup.getKeyFromName($dtquest.name, setup.unitgroup)>>
      <<set _basekey = `${_basekey}${$qcustomunitgroup.length}`>>
      <<set $qcustomunitgroup.push(
        new setup.UnitGroup(
          _basekey,  /* key */
          $ugname,
          $ugpools,
          _reuse,  /* reuse chance */
          $ugpostprocess,
        )
      )>>
      <<dtloadpassage>>
      <<goto 'QGAddActor'>>
    <</if>>
  <</if>>
<</link>>

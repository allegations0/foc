:: InitUnitActionTreatment [nobr]

<<run new setup.UnitAction({
  key: 'treatment_heal_basic',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_heal_basic,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.healing_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroom),
    setup.qres.IsInjured(),
    
  ],
  is_allow_injured: true,
})>>

<<run new setup.UnitAction({
  key: 'treatment_heal_advanced',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_heal_advanced,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.healing_potion_greater),
    setup.qres.Building(setup.buildingtemplate.treatmentroom),
    setup.qres.IsInjured(),
    
  ],
  is_allow_injured: true,
})>>

<<run new setup.UnitAction({
  key: 'treatment_blank',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_blank,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.Job(setup.job.slave),
    setup.qres.AnyTrait(setup.TraitHelper.TRAINING_ALL),
    setup.qres.HasItem(setup.item.blank_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroomblank),
    setup.qres.Available(),
    
  ],
})>>

<<run new setup.UnitAction({
  key: 'treatment_resetlevel',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_resetlevel,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.Job(setup.job.slaver),
    setup.qres.HasItem(setup.item.reset_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroomresetlevel),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_mindmend',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_mindmend,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.Trait(setup.trait.training_mindbreak),
    setup.qres.HasItem(setup.item.mindmend_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroommindmend),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_memoryisolation',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatmentmemory_isolation,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.potion_isolation),
    setup.qres.Building(setup.buildingtemplate.treatmentroomisolation),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_hate',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_hate,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.hate_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroomhate),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_love',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_love,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.love_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroomlove),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_lovetrue',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_love_true,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.love_potion_true),
    setup.qres.Building(setup.buildingtemplate.treatmentroomlovetrue),
    setup.qres.Available(),
    
  ],
})>>



<<run new setup.UnitAction({
  key: 'treatment_forget',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_forget,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.forget_potion),
    setup.qres.Building(setup.buildingtemplate.treatmentroomforget),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_transformation',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_transformation,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.HasItem(setup.item.potion_transformation),
    setup.qres.Building(setup.buildingtemplate.treatmentroomtransformation),
    setup.qres.NoTrait(setup.trait.race_demon),
    setup.qres.Available(),
    
  ],
})>>


<<run new setup.UnitAction({
  key: 'treatment_alternative',
  tags: ['treatment', ],
  quest_template: setup.questtemplate.treatment_alternative,
  prerequisites: [
  ],
  unit_requirements: [
    setup.qres.Job(setup.job.slaver),
    setup.qres.HasItem(setup.item.potion_alternative),
    setup.qres.Building(setup.buildingtemplate.treatmentroomalternative),
    setup.qres.Available(),
    
  ],
})>>
